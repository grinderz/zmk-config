/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LWIN  &kp ESCAPE  &kp Q  &kp W       &kp E      &kp R            &kp T        &kp Y        &kp U           &kp I      &kp O    &kp P     &kp LBKT       &mt RWIN RBKT
          &kp LCTRL   &kp A  &kp S       &kp D      &kp F            &kp G        &kp H        &kp J           &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
          &kp LALT    &kp Z  &kp X       &kp C      &kp V            &kp B        &kp N        &kp M           &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                             &lt 3 CAPS  &lt 2 TAB  &mt LSHFT SPACE  &lt 1 RET    &lt 1 GRAVE  &mt RSHFT BSPC  &lt 2 DEL  &to 3
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp UNDER       &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp F6     &kp F7            &kp F8             &kp F9          &kp F10          &kp F11          &mt RGUI F12
        &mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS          &kp STAR           &kp LPAR        &kp RPAR         &mt RCTRL MINUS
        &mt LALT EQUAL  &none     &none   &none     &none     &none        &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans
                                  &trans  &trans    &trans    &trans       &trans     &trans            &trans             &trans
            >;
        };

        raise_layer {
            bindings = <
&none  &none  &kp LG(N0)  &kp LG(MINUS)  &kp LG(EQUAL)  &kp LS(LG(NUMBER_4))  &kp LG(LS(N5))    &none           &kp END         &kp HOME      &none            &none  &none  &none
       &none  &none       &none          &none          &none                 &kp LS(LG(G))     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none  &none
       &none  &none       &none          &none          &kp LS(LG(O))         &kp LG(SPACE)     &none           &kp PAGE_DOWN   &kp PAGE_UP   &none            &none  &none
                          &trans         &trans         &trans                &trans            &trans          &trans          &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
&none  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none  &none  &none
       &none  &none         &none         &none         &none         &none           &none   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none  &none
       &none  &none         &none         &none         &kp NUMBER_0  &none           &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none
                            &trans        &trans        &trans        &trans          &trans  &trans        &trans        &trans
            >;
        };
    };
};
